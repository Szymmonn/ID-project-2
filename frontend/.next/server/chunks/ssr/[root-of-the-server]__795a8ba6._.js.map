{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///Users/szymon/Desktop/ID-TCS-projekt/frontend/src/api/index.js"],"sourcesContent":["// src/api/index.js\n\nimport axios from \"axios\";\n\n// Jeśli Twój FastAPI działa np. pod http://127.0.0.1:8000\nconst API_BASE = \"http://localhost:8000\";\n\nexport const api = axios.create({\n  baseURL: API_BASE,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// Przykład wrappera GET wszystkich z danej tabeli\nexport const getAll = (entity) => api.get(`/api/${entity}/`);\n\n// GET jednego po ID\nexport const getOne = (entity, id) => api.get(`/api/${entity}/${id}`);\n\n// POST – tworzenie nowego\nexport const createOne = (entity, data) => api.post(`/api/${entity}/`, data);\n\n// PUT – aktualizacja po ID\nexport const updateOne = (entity, id, data) =>\n  api.put(`/api/${entity}/${id}`, data);\n\n// DELETE – usuwanie po ID\nexport const deleteOne = (entity, id) => api.delete(`/api/${entity}/${id}`);\n\n// W przypadku tabel z kluczem złożonym (np. pilkarz_pozycja czy klub_budzet),\n// będziesz musiał dopasować endpointy do konstrukcji /api/kluby_budzet/?id_klubu=…&data=…\n"],"names":[],"mappings":"AAAA,mBAAmB;;;;;;;;;AAEnB;;AAEA,0DAA0D;AAC1D,MAAM,WAAW;AAEV,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC9B,SAAS;IACT,SAAS;QACP,gBAAgB;IAClB;AACF;AAGO,MAAM,SAAS,CAAC,SAAW,IAAI,GAAG,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AAGpD,MAAM,SAAS,CAAC,QAAQ,KAAO,IAAI,GAAG,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE,IAAI;AAG7D,MAAM,YAAY,CAAC,QAAQ,OAAS,IAAI,IAAI,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,EAAE;AAGhE,MAAM,YAAY,CAAC,QAAQ,IAAI,OACpC,IAAI,GAAG,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE,IAAI,EAAE;AAG3B,MAAM,YAAY,CAAC,QAAQ,KAAO,IAAI,MAAM,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE,IAAI,GAE1E,8EAA8E;CAC9E,0FAA0F","debugId":null}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":["file:///Users/szymon/Desktop/ID-TCS-projekt/frontend/src/app/oferty-klub-klub/page.tsx"],"sourcesContent":["// frontend/src/app/ligi/edytuj/[id]/page.tsx\n\"use client\";\n\nimport { useRouter, useParams } from \"next/navigation\";\nimport { useEffect, useState } from \"react\";\nimport { getOne, updateOne, getAll } from \"@/api\";\n\ntype Liga = {\n  id_ligi: number;\n  nazwa: string;\n  id_kraju: number;\n};\ntype Kraj = { id_kraju: number; nazwa: string };\n\nexport default function LigaEdytujPage() {\n  const router = useRouter();\n  const params = useParams(); // { id: \"123\" }\n  const id = params?.id!;\n\n  const [loaded, setLoaded] = useState(false);\n  const [kraje, setKraje] = useState<Kraj[]>([]);\n  const [nazwa, setNazwa] = useState(\"\");\n  const [wybranyKraj, setWybranyKraj] = useState<number | \"\">(\"\");\n\n  useEffect(() => {\n    if (!loaded) {\n      // Pobieramy najpierw listę krajów, potem dane ligi\n      Promise.all([getAll(\"kraje\"), getOne(\"ligi\", id)])\n        .then(([resKraje, resLiga]) => {\n          setKraje(resKraje.data);\n          const l: Liga = resLiga.data;\n          setNazwa(l.nazwa);\n          setWybranyKraj(l.id_kraju);\n        })\n        .catch((err) => console.error(\"Błąd pobierania:\", err))\n        .finally(() => setLoaded(true));\n    }\n  }, [loaded, id]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!nazwa || !wybranyKraj) return;\n\n    const payload = {\n      nazwa,\n      id_kraju: wybranyKraj,\n    };\n\n    try {\n      await updateOne(\"ligi\", id, payload);\n      router.push(\"/ligi\");\n    } catch (err) {\n      console.error(\"Błąd aktualizacji ligi:\", err);\n      alert(\"Nie udało się zaktualizować ligi.\");\n    }\n  };\n\n  if (!loaded) {\n    return <p>Ładowanie danych ligi…</p>;\n  }\n\n  return (\n    <div>\n      <h1>Edytuj ligę (ID: {id})</h1>\n      <form onSubmit={handleSubmit} style={{ maxWidth: 400 }}>\n        <div style={{ marginBottom: \"0.5rem\" }}>\n          <label>Nazwa ligi:</label>\n          <br />\n          <input\n            type=\"text\"\n            value={nazwa}\n            onChange={(e) => setNazwa(e.target.value)}\n            required\n          />\n        </div>\n        <div style={{ marginBottom: \"0.5rem\" }}>\n          <label>Kraj (ID):</label>\n          <br />\n          <select\n            value={wybranyKraj}\n            onChange={(e) => setWybranyKraj(Number(e.target.value))}\n            required\n          >\n            <option value=\"\">— wybierz kraj —</option>\n            {kraje.map((k) => (\n              <option key={k.id_kraju} value={k.id_kraju}>\n                {k.nazwa} (ID: {k.id_kraju})\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <button\n          type=\"submit\"\n          style={{\n            marginTop: \"1rem\",\n            backgroundColor: \"#0070f3\",\n            color: \"#fff\",\n            padding: \"0.5rem 1rem\",\n            border: \"none\",\n            borderRadius: 4,\n            cursor: \"pointer\",\n          }}\n        >\n          Aktualizuj\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => router.push(\"/ligi\")}\n          style={{\n            marginTop: \"1rem\",\n            marginLeft: \"1rem\",\n            backgroundColor: \"#aaa\",\n            color: \"#fff\",\n            padding: \"0.5rem 1rem\",\n            border: \"none\",\n            borderRadius: 4,\n            cursor: \"pointer\",\n          }}\n        >\n          Anuluj\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}